/* src/components/PetRoom.css */

.pet-room-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: 6px; /* Matches the inner content with the border */
  background-color: #ffffff;
  box-sizing: border-box;
  /* Reference size is 1080x1920 */
}

/* Room background layers container - fixed positioning */
.room-background-layers {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Background images - fixed positioning with no scaling */
.room-background-layers img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

/* Decor item style - adjusted for portrait mode */
.decor {
  position: absolute;
  object-fit: contain;
  transform-origin: center center;
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.05));
  transition: transform 0.3s ease-out;
  /* No more dynamically scaling size based on container */
}

/* Pet layer animations */
.pet-layer {
  position: absolute;
  transition: left 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: left, transform;
  bottom: 25%; /* Adjusted for portrait mode */
  height: auto;
  max-height: 30%; /* Smaller in portrait mode */
  transform: translateX(-50%);
  z-index: 30;
}

.pet-layer.waddling {
  animation: petWaddle 2s infinite;
}

.pet-layer.playing {
  animation: petPlay 2s infinite;
}

.pet-layer.flip {
  transform: translateX(-50%) scaleX(-1);
}

.pet-layer.pet-eating {
  animation: petEat 1s infinite;
}

.pet-layer.flip.waddling {
  animation: petWaddleFlip 2s infinite;
}

.pet-layer.flip.pet-eating {
  animation: petEatFlip 1s infinite;
}

/* Food position - adjusted for portrait mode */
.food-item {
  position: absolute;
  bottom: 20%; /* Adjusted position */
  z-index: 35;
  transform: translateX(-50%);
  max-height: 15%; /* Smaller in portrait mode */
}

/* Toy position - adjusted for portrait mode */
.toy.playing {
  position: absolute;
  bottom: 18%; /* Adjusted position */
  z-index: 20;
  max-height: 15%; /* Smaller in portrait mode */
  animation: toyPlay 2s infinite;
}

/* Mood bubble - adjusted for portrait mode */
.pet-mood-bubble {
  position: absolute;
  bottom: calc(25% + 35px); /* Position above pet, adjusted for portrait */
  transform: translateX(-50%);
  z-index: 50;
  background: white;
  padding: 6px 10px;
  border-radius: 12px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  max-width: 80%; /* Wider for portrait mode */
  animation: fadeIn 0.3s ease-in-out;
}

.pet-mood-bubble p {
  margin: 0;
  text-align: center;
  font-size: 0.85rem;
}

/* Animations for pet */
@keyframes petWaddle {
  0% { transform: rotate(0deg); }
  25% { transform: rotate(-2deg); }
  50% { transform: rotate(0deg); }
  75% { transform: rotate(2deg); }
  100% { transform: rotate(0deg); }
}

@keyframes petWaddleFlip {
  0% { transform: scaleX(-1) rotate(0deg); }
  25% { transform: scaleX(-1) rotate(-2deg); }
  50% { transform: scaleX(-1) rotate(0deg); }
  75% { transform: scaleX(-1) rotate(2deg); }
  100% { transform: scaleX(-1) rotate(0deg); }
}

@keyframes petPlay {
  0% { transform: scaleY(1); }
  25% { transform: scaleY(0.95) translateY(2%); }
  50% { transform: scaleY(1); }
  75% { transform: scaleY(0.95) translateY(2%); }
  100% { transform: scaleY(1); }
}

@keyframes petEat {
  0% { transform: scaleY(1); }
  50% { transform: scaleY(0.95) translateY(1%); }
  100% { transform: scaleY(1); }
}

@keyframes petEatFlip {
  0% { transform: scaleX(-1) scaleY(1); }
  50% { transform: scaleX(-1) scaleY(0.95) translateY(1%); }
  100% { transform: scaleX(-1) scaleY(1); }
}

/* Toy animation */
@keyframes toyPlay {
  0% { transform: rotate(0deg) translateY(0); }
  25% { transform: rotate(-5deg) translateY(-5%); }
  50% { transform: rotate(0deg) translateY(0); }
  75% { transform: rotate(5deg) translateY(-5%); }
  100% { transform: rotate(0deg) translateY(0); }
}

/* Mood bubble fade-in */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px) translateX(-50%); }
  to { opacity: 1; transform: translateY(0) translateX(-50%); }
}

.pet-room-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pet-room {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  animation: roomAmbience 30s ease-in-out infinite;
  perspective: 1000px;
  transform-style: preserve-3d;
  max-height: 100vh;
}

@keyframes roomAmbience {
  0%, 100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.05);
  }
}

.layer {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ceiling {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(0px);
}

.wall {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(10px);
}

.floor {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(20px);
}

.trim-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 4;
  object-fit: cover;
  pointer-events: none;
  transform: translateZ(30px);
}

/* Add subtle animation to decor items - DISABLED since it conflicts with transform */
/*.decor:nth-child(odd) {
  animation: decorWiggle1 10s ease-in-out infinite;
}

.decor:nth-child(even) {
  animation: decorWiggle2 14s ease-in-out infinite;
}*/

@keyframes decorWiggle1 {
  0%, 100% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  25% {
    transform: translate(-50%, -50%) rotate(0.8deg) translateY(-2px);
  }
  75% {
    transform: translate(-50%, -50%) rotate(-0.8deg) translateY(2px);
  }
}

@keyframes decorWiggle2 {
  0%, 100% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  30% {
    transform: translate(-50%, -50%) rotate(-0.5deg) translateY(2px);
  }
  70% {
    transform: translate(-50%, -50%) rotate(0.5deg) translateY(-2px);
  }
}

.overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 60;
  pointer-events: none;
  object-fit: cover;
}

.pet-layer {
  position: absolute;
  bottom: 20%;
  transform: translateX(-50%);
  transition: left 0.3s ease-in-out;
  z-index: 30;
  pointer-events: none;
  height: 25%;
  width: auto;
  will-change: transform;
  transform-origin: bottom center;
}

.toy {
  position: absolute;
  bottom: 20%;
  z-index: 20;
  pointer-events: none;
  transition: left 0.5s ease-in-out;
  height: 15%;
  width: auto;
}

.playing {
  animation: squishBounce 0.8s infinite alternate;
}

@keyframes squishBounce {
  0% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
  25% {
    transform: translateY(-4px) translateX(-52%) scale(0.9, 1.1);
  }
  50% {
    transform: translateY(-6px) translateX(-50%) scale(1.1, 0.9);
  }
  75% {
    transform: translateY(-4px) translateX(-48%) scale(0.9, 1.1);
  }
  100% {
    transform: translateY(0) translateX(-50%) scale(1.15, 0.85);
  }
}

/* Add toy animation */
.toy.playing {
  animation: toyWiggle 0.6s infinite alternate;
}

@keyframes toyWiggle {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-5px) rotate(-5deg);
  }
  75% {
    transform: translateY(-3px) rotate(5deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

/* When pet is playing, don't show the waddle animation */
.pet-layer.playing.waddling {
  animation: squishBounce 0.8s infinite alternate;
}

.pet-layer.flip {
  transform: translateX(-50%) scaleX(-1);
}

.pet-layer.waddling {
  transition: left 0.3s linear;
  /* Remove any transition delay for immediate image changes */
  image-rendering: optimizeSpeed;
  animation: waddle 0.6s ease-in-out infinite;
}

/* Make sure the food item and speech bubble keep up with the pet */
.pet-layer.waddling ~ .pet-mood-bubble {
  transition-timing-function: linear;
}

.pet-layer.waddling.flip {
  animation: waddleFlipped 0.6s ease-in-out infinite;
}

/* When playing and flipped */
.pet-layer.playing.flip {
  animation: squishBounceFlipped 0.8s infinite alternate;
}

@keyframes squishBounceFlipped {
  0% {
    transform: translateY(0) translateX(-50%) scaleX(-1) scale(1, 1);
  }
  25% {
    transform: translateY(-4px) translateX(-48%) scaleX(-1) scale(0.9, 1.1);
  }
  50% {
    transform: translateY(-6px) translateX(-50%) scaleX(-1) scale(1.1, 0.9);
  }
  75% {
    transform: translateY(-4px) translateX(-52%) scaleX(-1) scale(0.9, 1.1);
  }
  100% {
    transform: translateY(0) translateX(-50%) scaleX(-1) scale(1.15, 0.85);
  }
}

/* When both playing, walking and flipped */
.pet-layer.playing.waddling.flip {
  animation: squishBounceFlipped 0.8s infinite alternate;
}

@keyframes waddle {
  0% {
    transform: translateX(-50%) translateY(0);
  }
  50% {
    transform: translateX(-50%) translateY(-4px);
  }
  100% {
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes waddleFlipped {
  0% {
    transform: translateX(-50%) scaleX(-1) translateY(0);
  }
  50% {
    transform: translateX(-50%) scaleX(-1) translateY(-4px);
  }
  100% {
    transform: translateX(-50%) scaleX(-1) translateY(0);
  }
}

@keyframes petEatingMotion {
  0% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
  20% {
    transform: translateY(-2px) translateX(-50%) rotate(-2deg) scale(1.05, 0.95);
  }
  40% {
    transform: translateY(0) translateX(-53%) rotate(0deg) scale(1.1, 0.9);
  }
  60% {
    transform: translateY(-2px) translateX(-47%) rotate(2deg) scale(0.95, 1.05);
  }
  80% {
    transform: translateY(0) translateX(-50%) rotate(0deg) scale(1.05, 0.95);
  }
  100% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
}

.pet-eating {
  animation: petEatingMotion 0.5s ease-in-out !important;
}

/* Remove all shadow-related CSS */

