/* src/components/PetRoom.css */

.pet-room {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  animation: roomAmbience 30s ease-in-out infinite;
  perspective: 1000px;
  transform-style: preserve-3d;
}

@keyframes roomAmbience {
  0%, 100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.05);
  }
}

.layer {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ceiling {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(0px);
}

.wall {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(10px);
}

.floor {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3;
  opacity: 1;
  object-fit: cover;
  transform: translateZ(20px);
}

.trim-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 4;
  object-fit: cover;
  pointer-events: none;
  transform: translateZ(30px);
}

.decor {
  z-index: 3;
  position: absolute;
  pointer-events: none;
}

/* Add subtle animation to decor items */
.decor:nth-child(odd) {
  animation: decorWiggle1 10s ease-in-out infinite;
}

.decor:nth-child(even) {
  animation: decorWiggle2 14s ease-in-out infinite;
}

@keyframes decorWiggle1 {
  0%, 100% {
    transform: rotate(0deg) translateY(0);
  }
  25% {
    transform: rotate(0.8deg) translateY(-2px);
  }
  75% {
    transform: rotate(-0.8deg) translateY(2px);
  }
}

@keyframes decorWiggle2 {
  0%, 100% {
    transform: rotate(0deg) translateY(0);
  }
  30% {
    transform: rotate(-0.5deg) translateY(2px);
  }
  70% {
    transform: rotate(0.5deg) translateY(-2px);
  }
}

.overlay {
  z-index: 4;
  pointer-events: none;
}

.pet-layer {
  position: absolute;
  bottom: 20%;
  transform: translateX(-50%);
  transition: left 0.3s ease-in-out;
  z-index: 8;
  pointer-events: none;
  height: 25%;
  width: auto;
  will-change: transform;
  transform-origin: bottom center;
}

.toy {
  position: absolute;
  bottom: 20%;
  z-index: 10;
  pointer-events: none;
  transition: left 0.5s ease-in-out;
  height: 15%;
  width: auto;
}

.pet-mood-bubble {
  position: absolute;
  background: white;
  padding: 8px 12px;
  border-radius: 12px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 9;
  pointer-events: none;
  transition: left 0.5s ease-in-out;
  bottom: calc(20% + 25%);
  transform: translateX(-50%);
  max-width: 80%;
}

.pet-mood-bubble p {
  margin: 0;
  font-size: 14px;
  color: #333;
  text-align: center;
}

.playing {
  animation: squishBounce 0.8s infinite alternate;
}

@keyframes squishBounce {
  0% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
  25% {
    transform: translateY(-4px) translateX(-52%) scale(0.9, 1.1);
  }
  50% {
    transform: translateY(-6px) translateX(-50%) scale(1.1, 0.9);
  }
  75% {
    transform: translateY(-4px) translateX(-48%) scale(0.9, 1.1);
  }
  100% {
    transform: translateY(0) translateX(-50%) scale(1.15, 0.85);
  }
}

/* Add toy animation */
.toy.playing {
  animation: toyWiggle 0.6s infinite alternate;
}

@keyframes toyWiggle {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-5px) rotate(-5deg);
  }
  75% {
    transform: translateY(-3px) rotate(5deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

/* When pet is playing, don't show the waddle animation */
.pet-layer.playing.waddling {
  animation: squishBounce 0.8s infinite alternate;
}

.pet-layer.flip {
  transform: translateX(-50%) scaleX(-1);
}

.pet-layer.waddling {
  transition: left 0.3s linear;
  /* Remove any transition delay for immediate image changes */
  image-rendering: optimizeSpeed;
  animation: waddle 0.6s ease-in-out infinite;
}

/* Make sure the food item and speech bubble keep up with the pet */
.pet-layer.waddling ~ .pet-mood-bubble {
  transition-timing-function: linear;
}

.pet-layer.waddling.flip {
  animation: waddleFlipped 0.6s ease-in-out infinite;
}

/* When playing and flipped */
.pet-layer.playing.flip {
  animation: squishBounceFlipped 0.8s infinite alternate;
}

@keyframes squishBounceFlipped {
  0% {
    transform: translateY(0) translateX(-50%) scaleX(-1) scale(1, 1);
  }
  25% {
    transform: translateY(-4px) translateX(-48%) scaleX(-1) scale(0.9, 1.1);
  }
  50% {
    transform: translateY(-6px) translateX(-50%) scaleX(-1) scale(1.1, 0.9);
  }
  75% {
    transform: translateY(-4px) translateX(-52%) scaleX(-1) scale(0.9, 1.1);
  }
  100% {
    transform: translateY(0) translateX(-50%) scaleX(-1) scale(1.15, 0.85);
  }
}

/* When both playing, walking and flipped */
.pet-layer.playing.waddling.flip {
  animation: squishBounceFlipped 0.8s infinite alternate;
}

@keyframes waddle {
  0% {
    transform: translateX(-50%) translateY(0);
  }
  50% {
    transform: translateX(-50%) translateY(-4px);
  }
  100% {
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes waddleFlipped {
  0% {
    transform: translateX(-50%) scaleX(-1) translateY(0);
  }
  50% {
    transform: translateX(-50%) scaleX(-1) translateY(-4px);
  }
  100% {
    transform: translateX(-50%) scaleX(-1) translateY(0);
  }
}

@keyframes petEatingMotion {
  0% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
  20% {
    transform: translateY(-2px) translateX(-50%) rotate(-2deg) scale(1.05, 0.95);
  }
  40% {
    transform: translateY(0) translateX(-53%) rotate(0deg) scale(1.1, 0.9);
  }
  60% {
    transform: translateY(-2px) translateX(-47%) rotate(2deg) scale(0.95, 1.05);
  }
  80% {
    transform: translateY(0) translateX(-50%) rotate(0deg) scale(1.05, 0.95);
  }
  100% {
    transform: translateY(0) translateX(-50%) scale(1, 1);
  }
}

.pet-eating {
  animation: petEatingMotion 0.5s ease-in-out !important;
}

/* Remove all shadow-related CSS */

